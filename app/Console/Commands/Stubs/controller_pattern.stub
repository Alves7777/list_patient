<?php

namespace App\Http\Controllers\Api\GenericController;

use App\Http\Controllers\Controller;
use App\Http\Requests\Api\GenericController\GenericControllerRequest;
use App\Services\Api\GenericController\GenericControllerService;
use Illuminate\Http\JsonResponse;
use Illuminate\Support\Facades\DB;

class GenericControllerController extends Controller
{
    private GenericControllerService $GenericControllersService;

    public function __construct(GenericControllerService $GenericControllersService)
    {
        $this->GenericControllersService = $GenericControllersService;
    }

    public function index(): JsonResponse
    {
        try {
            $GenericController = $this->GenericControllersService->all();
            return response()->json([
                'data' => $GenericController,
                'message' => 'Listed Success'
            ]);
        } catch (\Exception $e) {
            return response()->json([
                'message' => $e->getMessage()
            ],400);
        }
    }

    public function store(GenericControllerRequest $request): JsonResponse
    {
        try {
            DB::beginTransaction();
            $GenericController = $this->GenericControllersService->create($request->validated());
            DB::commit();
            return response()->json([
                'data' => $GenericController,
                'message' => 'Successfully Created'
            ], 201);
        } catch (\Exception $e) {
            DB::rollBack();
            return response()->json([
                'message' => $e->getMessage()
            ],400);
        }
    }

    public function destroy(string $id): JsonResponse
    {
        try {
            DB::beginTransaction();
            $GenericController = $this->GenericControllersService->delete($id);
            DB::commit();
            return response()->json([
                'data' => $GenericController,
                'message' => 'Successfully Deleted'
            ],204);
        } catch (\Exception $e) {
            DB::rollBack();
            return response()->json([
                'message' => $e->getMessage()
            ], 500);
        }
    }
}
